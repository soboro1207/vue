/*
* インスタンス
* すべてのVueアプリケーションはここから始まる
*/

//データオブジェクト
var data = {a : 1}
//インスタンス生成
var vm = new Vue({
  //vmはViewModelの略、よく使うらしい。いあゆるデファクトスタンダード。
  el: '#example',
  data:data
})

//インスタンスのプロパティを取得すると
//元のデータからそのプロパティが返される
vm.a == data.a // これはtrue

//プロパティへの代入は、元のデータにも反映される
vm.a = 2
data.a // これは2となる

//・・・・そして逆もまた然り、です。
data.a = 3
vm.a //もちろん、3です。

//dataの他にも便利なものはがあります
//それはユーザ定義のプロパティと区別するために頭に＄が付けられる
vm.$data === data //true
vm.$el === document.getElementById('example') //true

//$watchはインスタンスメソッド
vm.$watch('a', function(newValue, oldValue){
  //このコールバックは'vm.a'の値が変わるときに呼ばれます。
  //将来的にはAPIリファレンスみないといけないらしい
})

//インスタンスライフサイクルフック
//createフックはインスタンスが生成された後にコードを実行したいときに使われる
new Vue({
  data:{
    a:1
  },
  created: function(){
    //'this'はどこでも使われています
    console.log('a is: ' + this.a)
  }
})// "a is: 1" の関係が完成する

//この他にもmounted,updated,destroyedがなどある
